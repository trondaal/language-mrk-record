# TextMate tutorial: http://manual.macromates.com/en/language_grammars

# Regex to convert keys to unquoted: '(include|match|captures|begin|end|beginCaptures|endCaptures|name|patterns|0|1|2|3|4|5|6|7|8|9|comment|fileTypes|scopeName|repository|contentName|firstLineMatch|foldingStartMarker|foldingStopMarker)':

scopeName: 'source.mrk' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)
name: 'MARC line format' # The title that will show up in grammar selection and on your status bar.
fileTypes: [ # An array of file extensions.
  'mrk'
]
firstLineMatch: '' # A regular expression that is matched against the first line of the document when Atom is trying to decide if the grammar is appropriate. Useful for shell scripts, mostly.
foldingStartMarker: '' # A regular expression that checks for the start of a foldable area (such as `{`).
foldingStopMarker: '' # A regular expression that checks for the end of a foldable area (such as `}`). If both folding markers are matched in the same line, there will be no foldable area.
patterns = [
		{	name: 'keyword.control'
			match: '^=(LDR|[0-9]{3})'
		}
		{	match: '(\$0)(https?[-:@a-zA-Z0-9_.,~%+/?=&#;]+)'
			captures:
				1:
          name: 'constant'
				2:
          name : 'variable'
			};
		}
		{	match = '(\$1)(https?[-:@a-zA-Z0-9_.,~%+/?=&#;]+)';
			captures = {
				1 = { name = 'constant'; };
				2 = { name = 'variable'; };
			};
		},
		{	match = '(\$4)(https?[-:@a-zA-Z0-9_.,~%+/?=&#;]+)';
			captures = {
				1 = { name = 'constant'; };
				2 = { name = 'variable'; };
			};
		},
		{	name = 'constant';
			match = '\$[a-z0-9]';
		},
	];
